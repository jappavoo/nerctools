#!/bin/bash
#set -x
OSCMD=${OSCMD:-openstack}

scriptdir=$(dirname $(realpath $0))
configdir=$scriptdir/config

if [[ -z $CREDRC ]] && [[ -a $configdir/default_cred.rc ]]; then
   CREDRC=$configdir/default_cred.rc
fi
if [[ -z $CREDRC ]]; then
  echo "$0: ERROR: no credential rc file specified via CREDRC environment variable and no default configured." > /dev/stderr
  exit -1
fi   

source $CREDRC

# simple way to test if the ssh server is up is to use an ssh command
# that is known to fail due to bad authentication or other user error
# with a short connection time out... this way if the system is down
# we can figure it out quickly ... however if it is up then we will
# fail quickly due an early rejection... at least that my story and
# I am sticking to it ;-)
function isup()
{
#    set -x
    local s=$1
    local out
    local rc=0
    
    #! $OSCMD server ssh $s -- -l nobody -i /dev/null -v -o "StrictHostKeyChecking no" ConnectTimeout=1 -o ConnectTimeout=1 -o ConnectionAttempts=1 true 2>&1 | grep -i  "timed out"
    # not sure if we really need  ConnectionAttempts=1 so default behaviour for the moment is not to use it
    out=$($OSCMD server ssh $s -- -l nobody -i /dev/null -v -o 'StrictHostKeyChecking\ no' -o ConnectTimeout=1 true 2>&1)
    if [[ $out =~ ^No\ server.*$ ]]; then
	rc=1
    elif [[ $out =~ ^.*Operation\ timed\ out.* ]]; then
	rc=2
    else
	rc=0
    fi
    return $rc
}

isup $1
